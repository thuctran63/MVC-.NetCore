// <auto-generated />
using System;
using FA.JustBlog.Core.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FA.JustBlog.Core.Migrations
{
    [DbContext(typeof(JustBlogContext))]
    partial class JustBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FA.JustBlog.Core.Model.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Description = "Programming Language",
                            Name = "Programming",
                            UrlSlug = "programming"
                        },
                        new
                        {
                            Id = "2",
                            Description = "Technology News",
                            Name = "Technology",
                            UrlSlug = "technology"
                        },
                        new
                        {
                            Id = "3",
                            Description = "Life Style",
                            Name = "Life",
                            UrlSlug = "life"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Model.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CategoryId = "1",
                            Modified = new DateTime(2024, 9, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            PostContent = "Post 1 Content AABBCC",
                            PostedOn = new DateTime(2024, 9, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Published = true,
                            ShortDescription = "Post 1 Short Description",
                            Title = "Post 1",
                            UrlSlug = "post-1"
                        },
                        new
                        {
                            Id = "2",
                            CategoryId = "2",
                            Modified = new DateTime(2024, 9, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            PostContent = "Post 2 Content AABBCC",
                            PostedOn = new DateTime(2024, 9, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Published = true,
                            ShortDescription = "Post 2 Short Description",
                            Title = "Post 2",
                            UrlSlug = "post-2"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Model.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Count = 0,
                            Description = "C# Programming Language",
                            Name = "C#",
                            UrlSlug = "csharp"
                        },
                        new
                        {
                            Id = "2",
                            Count = 0,
                            Description = "ASP.NET Web Development",
                            Name = "ASP.NET",
                            UrlSlug = "aspnet"
                        },
                        new
                        {
                            Id = "3",
                            Count = 0,
                            Description = "SQL Server Database",
                            Name = "SQL Server",
                            UrlSlug = "sqlserver"
                        });
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<string>("PostsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Model.Post", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Model.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Model.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA.JustBlog.Core.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FA.JustBlog.Core.Model.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
